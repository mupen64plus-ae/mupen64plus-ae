apply plugin: 'com.android.library'
apply from: '../build_common/version_common.gradle'

android {

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
        debug {
            minifyEnabled true
            jniDebuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
        android {
        }
    }

    externalNativeBuild {
        cmake {
            version "3.22.1"
            path "CMakeLists.txt"
        }
    }

    defaultConfig {
        externalNativeBuild {
            cmake {
                arguments "-DANDROID=1", "-DCMAKE_BUILD_TYPE=Release", "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_LIB_PATH=$projectDir/../ndkLibs",
                        "-DM64API_INCLUDE_PATH=$projectDir/../mupen64plus-core/upstream/src/api/",
                        "-DANDROID_STL=c++_shared"
                cppFlags "-fexceptions", "-ffast-math", "-ftree-vectorize", "-Oz", "-g"
                abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            }
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
        }
    }
    packagingOptions {
        jniLibs {
            excludes += ['lib/x86/libc++_shared.so', 'lib/x86_64/libc++_shared.so', 'lib/armeabi-v7a/libc++_shared.so', 'lib/arm64-v8a/libc++_shared.so']
            useLegacyPackaging = true
        }
    }

}
